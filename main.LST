C51 COMPILER V9.01   MAIN                                                                  10/22/2018 14:23:07 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Program Files (x86)\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////       
   2          //              SSD1306_OLED_128*64ËµÃ÷(Ñ¡ÓÃSPI½Ó¿Ú): 
   3          //              ----------------------------------------------------------------
   4          //              GND    µçÔ´µØ
   5          //              VCC  ½Ó5V»ò3.3vµçÔ´
   6          //              D0   P1^0£¨SCL£©
   7          //              D1   P1^1£¨SDA£©
   8          //              RES  ½ÓP12
   9          //              DC   ½ÓP13
  10          //              CS   ½ÓP14               
  11          //              ----------------------------------------------------------------
  12          //******************************************************************************/
  13          #include "reg51.h"
  14          #include "header_file/oled.h"
  15          //#include "header_file/bmp.h"                    //51²âÊÔ£¬½ÚÊ¡¿Õ¼ä                                      
  16          #include "clock_c/clock.h"
  17          #include "delay_c/delay.h"
  18          
  19          //°´¼ü¶¨Òå
  20          sbit key1 = P1^5;
  21          sbit key2 = P1^6;
  22          sbit key3 = P1^7;
  23          sbit int0 = P3^2;
  24          
  25          uchar time_one[6];                              //Ê±¼ä°´Î»·Ö½â,Ã¿¸öÊý×ÖÕ¼Ò»Î»
  26          uchar day_one[11];                              //ÈÕÆÚ°´Î»·Ö½â,Ã¿¸öÊý×ÖÕ¼Ò»Î»
  27          uchar time_two[4];                              //Ê±¼ä´¢´æÊý×é£¬Ê±·ÖÃë¸÷Õ¼Ò»Î»
  28          uchar day_two[4];                               //ÈÕÆÚ´¢´æÊý×é£¬ÄêÔÂÈÕ¸÷Õ¼Ò»Î»
  29          uchar time_day[13];                             //Î´¼ÆËãÆ«ÒÆµØÖ·µÄÊ±¼äÈÕÆÚ
  30          uchar SIZE = 16;                                                //×ÖÌå´óÐ¡Ñ¡Ôñ£¬16/12
  31          
  32          uchar key_check;
  33          
  34          
  35          //Íâ²¿ÖÐ¶Ï³õÊ¼»¯º¯Êý£¬ÓÃÓÚ°´¼ü¼ì²â
  36          void int0_init()
  37          {
  38   1              EX0 = 1;
  39   1              IT0 = 1;
  40   1              EA = 1;
  41   1      }
  42          
  43          
  44          
  45          
  46          void time_day_out()
  47          {
  48   1              TR0 = 1;
  49   1              time_date(time_one,day_one,time_two,day_two,time_day);  
  50   1              OLED_ShowCHinese1(20,1,time_day[0]);// Ð¡Ê±
  51   1              OLED_ShowCHinese1(37,1,time_day[1]);
  52   1              OLED_ShowCHinese1(52,1,10);         //:
  53   1              OLED_ShowCHinese1(68,1,time_day[2]);//·ÖÖÓ
  54   1              OLED_ShowCHinese1(85,1,time_day[3]);
  55   1              SIZE = 12;
C51 COMPILER V9.01   MAIN                                                                  10/22/2018 14:23:07 PAGE 2   

  56   1              OLED_ShowChar(102,2,time_day[4]+'0',&SIZE);              //Ãë
  57   1              OLED_ShowChar(108,2,time_day[5]+'0',&SIZE);
  58   1              OLED_ShowString(47,5,day_one,&SIZE);                     //ÈÕÆÚ
  59   1              OLED_ShowNum(0,6,time_two[2],3,&SIZE);          //µ×²¿ÃëÊý£¬²âÊÔOLED_ShowNum();º¯Êý 
  60   1              SIZE = 16;
  61   1              OLED_ShowString(0,5,"Seule",&SIZE);                                //logo
  62   1              OLED_ShowCHinese(48,6,0);
  63   1      }
  64          
  65          void time_day_seting()
  66          {
  67   1              uint key2_logger = 0;
  68   1              OLED_Clear();
  69   1              SIZE = 16;
  70   1              while(1)
  71   1              {
  72   2                      OLED_ShowString(0,0,"Please set hour:",&SIZE);
  73   2                      switch(key_check)
  74   2                      {
  75   3                              case 1:break;
  76   3                              case 2:key2_logger++;break;
  77   3                              case 3:clock_hour_addone();break;
  78   3                      }
  79   2                      while(key2_logger == 1)
  80   2                      {
  81   3                              OLED_ShowString(0,0,"Please set minute:",&SIZE);
  82   3                              switch(key_check)
  83   3                              {
  84   4                                      case 1:break;
  85   4                                      case 2:key2_logger++;break;
  86   4                                      case 3:clock_min_addone();break;
  87   4                              }       
  88   3                      }
  89   2                      while(key2_logger == 2)
  90   2                      {
  91   3                              OLED_ShowString(0,0,"Please set second:",&SIZE);
  92   3                              switch(key_check)
  93   3                              {
  94   4                                      case 1:break;
  95   4                                      case 2:key2_logger++;break;
  96   4                                      case 3:clock_sec_addone();break;
  97   4                              }       
  98   3                      }
  99   2                      while(key2_logger == 3)
 100   2                      {
 101   3                              OLED_ShowString(0,0,"Please set year:",&SIZE);
 102   3                              switch(key_check)
 103   3                              {
 104   4                                      case 1:break;
 105   4                                      case 2:key2_logger++;break;
 106   4                                      case 3:clock_year_addone();break;
 107   4                              }       
 108   3                      }
 109   2                      while(key2_logger == 4)
 110   2                      {
 111   3                              OLED_ShowString(0,0,"Please set month:",&SIZE);
 112   3                              switch(key_check)
 113   3                              {
 114   4                                      case 1:break;
 115   4                                      case 2:key2_logger++;break;
 116   4                                      case 3:clock_mon_addone();break;
 117   4                              }       
C51 COMPILER V9.01   MAIN                                                                  10/22/2018 14:23:07 PAGE 3   

 118   3                      }
 119   2                      while(key2_logger == 5)
 120   2                      {
 121   3                              OLED_ShowString(0,0,"Please set day:",&SIZE);
 122   3                              switch(key_check)
 123   3                              {
 124   4                                      case 1:break;
 125   4                                      case 2:key2_logger++;break;
 126   4                                      case 3:clock_day_addone();break;
 127   4                              }       
 128   3                      }
 129   2                      break;  
 130   2              }
 131   1      }
 132          
 133          
 134          
 135          //Íâ²¿ÖÐ¶Ï0·þÎñº¯Êý
 136          void int_0()  interrupt 0 
 137          {
 138   1              EX0 = 0;
 139   1              if(key1 == 0)
 140   1                      {delay_ms(10);if(key1 == 0)
 141   2                              key_check = 1;
 142   2                      
 143   2                      }
 144   1              if(key2 == 0)
 145   1                      {delay_ms(10);if(key2 == 0)
 146   2                              key_check = 2;
 147   2                      }
 148   1              if(key3 == 0)
 149   1                      {delay_ms(10);if(key3 == 0)
 150   2                              key_check = 3;
 151   2                      }
 152   1              int0 = 1;
 153   1              EX0 = 1;
 154   1      }
 155          
 156          void  main()
 157          {                 
 158   1              OLED_Init();                            //³õÊ¼»¯OLED  
 159   1              OLED_Clear();                           
 160   1              time_init(); 
 161   1              int0_init();
 162   1              PX0 = 1;
 163   1              PT0 = 0;
 164   1      /*      OLED_Clear();                                   //8051²âÊÔ£¬FLASH¿Õ¼ä4K£¬²âÊÔÕý³££¬¹ÊÊ¡ÂÔ,¿ª»ú¶¯»­
 165   1              delay_ms(200);
 166   1              OLED_DrawBMP(0,0,128,8,BMP1);   //Í¼Æ¬ÏÔÊ¾(Í¼Æ¬ÏÔÊ¾É÷ÓÃ£¬Éú³ÉµÄ×Ö±í½Ï´ó£¬»áÕ¼ÓÃ½Ï¶à¿Õ¼ä£¬FLASH¿Õ¼ä8KÒÔÏÂÉ
             -÷ÓÃ)
 167   1              delay_ms(500);  */
 168   1               
 169   1              while(1)
 170   1              {
 171   2                      while(key_check)
 172   2                      {
 173   3                              while(key_check)
 174   3                              {
 175   4                                      if(key_check == 1)      {time_day_seting();break;}
 176   4      //                              if(key_check == 2)  {stopwatch();break;}
 177   4      //                              if(key_check == 3)  {say_hello();break;}
 178   4                              }       
C51 COMPILER V9.01   MAIN                                                                  10/22/2018 14:23:07 PAGE 4   

 179   3                      }                          
 180   2                      time_day_out();         
 181   2      
 182   2      //      OLED_ShowNum(56,2,time_two[2],3,&SIZE); 
 183   2              }
 184   1      }         
 185                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    681    ----
   CONSTANT SIZE    =    112    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
