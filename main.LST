C51 COMPILER V9.01   MAIN                                                                  10/21/2018 13:54:57 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Program Files (x86)\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////       
   2          //              SSD1306_OLED_128*64ËµÃ÷(Ñ¡ÓÃSPI½Ó¿Ú): 
   3          //              ----------------------------------------------------------------
   4          //              GND    µçÔ´µØ
   5          //              VCC  ½Ó5V»ò3.3vµçÔ´
   6          //              D0   P1^0£¨SCL£©
   7          //              D1   P1^1£¨SDA£©
   8          //              RES  ½ÓP12
   9          //              DC   ½ÓP13
  10          //              CS   ½ÓP14               
  11          //              ----------------------------------------------------------------
  12          //******************************************************************************/
  13          #include "reg51.h"
  14          #include "header_file/oled.h"
  15          //#include "header_file/bmp.h"                    //51²âÊÔ£¬½ÚÊ¡¿Õ¼ä                                      
  16          #include "clock_c/clock.h"
  17          #include "delay_c/delay.h"
  18          
  19          //°´¼ü¶¨Òå
  20          sbit key1 = P1^5;
  21          sbit key2 = P1^6;
  22          sbit key3 = P1^7;
  23          sbit int0 = P3^2;
  24          
  25          uchar time_one[6];                              //Ê±¼ä°´Î»·Ö½â,Ã¿¸öÊý×ÖÕ¼Ò»Î»
  26          uchar day_one[11];                              //ÈÕÆÚ°´Î»·Ö½â,Ã¿¸öÊý×ÖÕ¼Ò»Î»
  27          uchar time_two[4];                              //Ê±¼ä´¢´æÊý×é£¬Ê±·ÖÃë¸÷Õ¼Ò»Î»
  28          uchar day_two[4];                               //ÈÕÆÚ´¢´æÊý×é£¬ÄêÔÂÈÕ¸÷Õ¼Ò»Î»
  29          uchar time_day[13];                             //Î´¼ÆËãÆ«ÒÆµØÖ·µÄÊ±¼äÈÕÆÚ
  30          uchar SIZE = 16;                                                //×ÖÌå´óÐ¡Ñ¡Ôñ£¬16/12
  31          
  32          uchar key_check;
  33          
  34          
  35          
  36          
  37          //Íâ²¿ÖÐ¶Ï³õÊ¼»¯º¯Êý£¬ÓÃÓÚ°´¼ü¼ì²â
  38          void int0_init()
  39          {
  40   1              EX0 = 1;
  41   1              IT0 = 1;
  42   1              EA = 1;
  43   1      }
  44          
  45          //Íâ²¿ÖÐ¶Ï0·þÎñº¯Êý
  46          void int_0()  interrupt 0
  47          {
  48   1              EX0 = 0;
  49   1              if(key1 == 0)
  50   1                      {delay_ms(100);if(key1 == 0)
  51   2                              key_check = 1;
  52   2                      }
  53   1              if(key2 == 0)
  54   1                      {delay_ms(100);if(key2 == 0)
  55   2                              key_check = 2;
C51 COMPILER V9.01   MAIN                                                                  10/21/2018 13:54:57 PAGE 2   

  56   2                      }
  57   1              if(key3 == 0)
  58   1                      {delay_ms(100);if(key3 == 0)
  59   2                              key_check = 3;
  60   2                      }
  61   1              EX0 = 1;
  62   1      }
  63          
  64          
  65          void time_day_out()
  66          {
  67   1              TR0 = 1;
  68   1              time_date(time_one,day_one,time_two,day_two,time_day);  
  69   1              OLED_ShowCHinese1(20,1,time_day[0]);// Ð¡Ê±
  70   1              OLED_ShowCHinese1(37,1,time_day[1]);
  71   1              OLED_ShowCHinese1(52,1,10);//:
  72   1              OLED_ShowCHinese1(68,1,time_day[2]);//·ÖÖÓ
  73   1              OLED_ShowCHinese1(85,1,time_day[3]);
  74   1              SIZE = 12;
  75   1              OLED_ShowChar(102,2,time_day[4]+'0',&SIZE);
  76   1              OLED_ShowChar(108,2,time_day[5]+'0',&SIZE);
  77   1              OLED_ShowString(47,5,day_one,&SIZE);
  78   1      }
  79          
  80          void time_day_seting()
  81          {
  82   1              uint key2_logger = 0;
  83   1              OLED_Clear();
  84   1              SIZE = 16;
  85   1              while(1)
  86   1              {
  87   2                      OLED_ShowString(8,0,"Please set hour:",&SIZE);
  88   2                      switch(key_check)
  89   2                      {
  90   3                              case 1:break;
  91   3                              case 2:key2_logger++;break;
  92   3                              case 3:clock_hour_addone();break;
  93   3                      }
  94   2                      while(key2_logger == 1)
  95   2                      {
  96   3                              OLED_ShowString(8,0,"Please set minute:",&SIZE);
  97   3                              switch(key_check)
  98   3                              {
  99   4                                      case 1:break;
 100   4                                      case 2:key2_logger++;break;
 101   4                                      case 3:clock_min_addone();break;
 102   4                              }       
 103   3                      }
 104   2                      while(key2_logger == 2)
 105   2                      {
 106   3                              OLED_ShowString(8,0,"Please set second:",&SIZE);
 107   3                              switch(key_check)
 108   3                              {
 109   4                                      case 1:break;
 110   4                                      case 2:key2_logger++;break;
 111   4                                      case 3:clock_sec_addone();break;
 112   4                              }       
 113   3                      }
 114   2                      while(key2_logger == 3)
 115   2                      {
 116   3                              OLED_ShowString(8,0,"Please set year:",&SIZE);
 117   3                              switch(key_check)
C51 COMPILER V9.01   MAIN                                                                  10/21/2018 13:54:57 PAGE 3   

 118   3                              {
 119   4                                      case 1:break;
 120   4                                      case 2:key2_logger++;break;
 121   4                                      case 3:clock_year_addone();break;
 122   4                              }       
 123   3                      }
 124   2                      while(key2_logger == 4)
 125   2                      {
 126   3                              OLED_ShowString(8,0,"Please set month:",&SIZE);
 127   3                              switch(key_check)
 128   3                              {
 129   4                                      case 1:break;
 130   4                                      case 2:key2_logger++;break;
 131   4                                      case 3:clock_mon_addone();break;
 132   4                              }       
 133   3                      }
 134   2                      while(key2_logger == 5)
 135   2                      {
 136   3                              OLED_ShowString(8,0,"Please set day:",&SIZE);
 137   3                              switch(key_check)
 138   3                              {
 139   4                                      case 1:break;
 140   4                                      case 2:key2_logger++;break;
 141   4                                      case 3:clock_day_addone();break;
 142   4                              }       
 143   3                      }
 144   2                      break;  
 145   2              }
 146   1      }
 147          
 148          
 149          void  main()
 150          {                 
 151   1              OLED_Init();                            //³õÊ¼»¯OLED  
 152   1              OLED_Clear();                           
 153   1              time_init(); 
 154   1              int0_init();
 155   1              PX0 = 1;
 156   1              PT0 = 0;
 157   1      /*      OLED_Clear();                                   //8051²âÊÔ£¬FLASH¿Õ¼ä4K£¬²âÊÔÕý³££¬¹ÊÊ¡ÂÔ,¿ª»ú¶¯»­
 158   1              delay_ms(200);
 159   1              OLED_DrawBMP(0,0,128,8,BMP1);   //Í¼Æ¬ÏÔÊ¾(Í¼Æ¬ÏÔÊ¾É÷ÓÃ£¬Éú³ÉµÄ×Ö±í½Ï´ó£¬»áÕ¼ÓÃ½Ï¶à¿Õ¼ä£¬FLASH¿Õ¼ä8KÒÔÏÂÉ
             -÷ÓÃ)
 160   1              delay_ms(500);  */
 161   1               
 162   1              while(1)
 163   1              {
 164   2                      while(key_check)
 165   2                      {
 166   3                              switch(key_check)
 167   3                              {
 168   4                                      case 1:time_day_seting();break;
 169   4      //                              case 2:stopwatch();break;
 170   4      //                              case 3:say_hello;
 171   4                              }       
 172   3                      }
 173   2                      time_day_out();         
 174   2      
 175   2      //      OLED_ShowNum(56,2,time_two[2],3,&SIZE);
 176   2      /*      OLED_ShowString(0,6,"ASCII:");  
 177   2              OLED_ShowString(63,6,"CODE:");  
 178   2              OLED_ShowNum(103,6,t,3,16);//ÏÔÊ¾ASCII×Ö·ûµÄÂëÖµ                */              
C51 COMPILER V9.01   MAIN                                                                  10/21/2018 13:54:57 PAGE 4   

 179   2              }
 180   1      }         
 181                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    623    ----
   CONSTANT SIZE    =    106    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
